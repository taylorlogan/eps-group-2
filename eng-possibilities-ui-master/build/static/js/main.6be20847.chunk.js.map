{"version":3,"sources":["components/NavBar/index.js","components/Chart/index.js","components/Table/index.js","pages/Forecaster/index.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","Brand","href","Nav","className","Link","data","name","uv","pv","amt","Chart","LineChart","width","height","Line","type","dataKey","stroke","CartesianGrid","XAxis","YAxis","Table","useState","count","setCount","onClick","ForecasterHome","App","Container","fluid","Forecaster","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAiBeA,EAbA,WACb,OACE,mCACE,eAACC,EAAA,EAAD,CAAQC,GAAG,QAAX,UACE,cAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,IAAnB,kBACA,cAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,SACE,cAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,IAAf,0B,6CCPJI,EAAO,CAAC,CAACC,KAAM,SAAUC,GAAI,IAAKC,GAAI,KAAMC,IAAK,MACzC,CAACH,KAAM,SAAUC,GAAI,IAAKC,GAAI,KAAMC,IAAK,MACzC,CAACH,KAAM,SAAUC,GAAI,IAAKC,GAAI,KAAMC,IAAK,MACzC,CAACH,KAAM,SAAUC,GAAI,GAAIC,GAAI,KAAMC,IAAK,OAqBvCC,EAjBD,WACZ,OACE,mCACG,8BACK,eAACC,EAAA,EAAD,CAAWC,MAAO,IAAKC,OAAQ,IAAKR,KAAMA,EAA1C,UACI,cAACS,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,KAAKC,OAAO,YAC1C,cAACC,EAAA,EAAD,CAAeD,OAAO,SACtB,cAACE,EAAA,EAAD,CAAOH,QAAQ,cACf,cAACI,EAAA,EAAD,CAAOJ,QAAQ,iB,QC6BhBK,EA7CD,WAAO,IAAD,EAEUC,mBAAS,GAFnB,mBAETC,EAFS,KAEFC,EAFE,KAIlB,OACE,gCACE,6CAAgBD,EAAhB,YACA,wBAAQE,QAAS,kBAAMD,EAASD,EAAQ,IAAxC,0BCOSG,EAXQ,WACrB,OACE,mCACG,gCACK,cAAC,EAAD,IACA,cAAC,EAAD,U,OCUGC,MAbf,WACE,OACE,8BACE,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAC1B,UAAU,MAA3B,UACE,cAAC,EAAD,IACA,cAACyB,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACC,cAACC,EAAD,YCDMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCEdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6be20847.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Navbar, Nav } from \"react-bootstrap\";\n\nconst NavBar = () => {\n  return (\n    <>\n      <Navbar bg=\"light\">\n        <Navbar.Brand href=\"#\">DePo</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n        </Nav>\n      </Navbar>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\n\nconst data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400}, \n              {name: 'Page b', uv: 200, pv: 2400, amt: 2400},\n              {name: 'Page c', uv: 100, pv: 2400, amt: 2400}, \n              {name: 'Page d', uv: 50, pv: 2400, amt: 2400}];\n\n\n\nconst Chart = () => {\n  return (\n    <>\n       <div>\n            <LineChart width={600} height={300} data={data}>\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis dataKey=\"Value {$)\" />\n                <YAxis dataKey=\"Year\" />\n            </LineChart>\n       </div>\n    </>\n  );\n};\n\n\n\nexport default Chart;\n","import React, { useState } from \"react\";\n\nconst Table = () => {\n    \n    const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n\n\n//     const [energy, setEnergy] = useState(0);\n//     // const [technology, setTechnology] = useState(0);\n//     // const [financialServices, setFinancialServices] = useState(0);\n//     // const [realEstate, setRealEstate] = useState(0);\n//     // const [pharmaceuticals, setPharmaceuticals] = useState(0);\n//     // const [airline, setAirline] = useState(0);\n//     // const [retail, setRetail] = useState(0);\n//     // const [gaming, setGaming] = useState(0);\n    \n    \n\n//   return (\n//     <>\n//        <div>\n//            <p>Investment Allocations</p>\n//            <p>energy {energy}</p>\n\n//             <button onClick={update()}>\n//                 Update!\n//             </button>\n//        </div>\n//     </>\n//   );\n\n//   function update() {\n//     setEnergy(energy+1);\n //  }\n};\n\n\n\nexport default Table;\n\n\n//calling backend","import React from \"react\";\n//replace w relative path later!\nimport Chart from \"/Users/aarushiupadhyaya/portfolio/eps-group-2/eng-possibilities-ui-master/src/components/Chart/index.js\";\nimport Table from \"/Users/aarushiupadhyaya/portfolio/eps-group-2/eng-possibilities-ui-master/src/components/Table/index.js\";\n\nconst ForecasterHome = () => {\n  return (\n    <>\n       <div>\n            <Chart/>\n            <Table/>\n       </div>\n    </>\n  );\n};\n\nexport default ForecasterHome;\n","import { Container } from \"react-bootstrap\";\n\nimport NavBar from \"./components/NavBar\";\nimport ForecasterHome from './pages/Forecaster'\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Container fluid className=\"App\">\n        <NavBar />\n        <Container fluid>\n         <ForecasterHome/>\n        </Container>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}